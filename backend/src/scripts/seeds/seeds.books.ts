import { Book } from '../../models/index.model';
import Logger from '../../utils/logger.utils';

export async function seedBooks(): Promise<void> {
  try {
    // Configuration des donn√©es de livres
    const booksData = [
      {
        title: 'Le Petit Prince',
        author: 'Antoine de Saint-Exup√©ry',
        price: 9.99,
        stock: 50,
        coverUrl: 'https://example.com/petit-prince.jpg',
        description: 'Un classique de la litt√©rature fran√ßaise'
      },
      {
        title: '1984',
        author: 'George Orwell',
        price: 12.99,
        stock: 30,
        coverUrl: 'https://example.com/1984.jpg',
        description: 'Un roman dystopique sur la surveillance de masse'
      },
      {
        title: 'Dune',
        author: 'Frank Herbert',
        price: 14.99,
        stock: 25,
        coverUrl: 'https://example.com/dune.jpg',
        description: 'Le chef-d\'≈ìuvre de la science-fiction'
      },
      {
        title: 'Harry Potter √† l\'√©cole des sorciers',
        author: 'J.K. Rowling',
        price: 11.99,
        stock: 45,
        coverUrl: 'https://example.com/harry-potter.jpg',
        description: 'Le d√©but de la c√©l√®bre saga de magie'
      },
      {
        title: 'L\'√âtranger',
        author: 'Albert Camus',
        price: 8.99,
        stock: 20,
        coverUrl: 'https://example.com/etranger.jpg',
        description: 'Un roman existentialiste sur l\'absurdit√© de la vie'
      }
    ];

    // V√©rifier si des livres existent d√©j√†
    const booksCount = await Book.countDocuments();

    if (booksCount === 0) {
      // Cr√©er les livres
      await Book.insertMany(booksData);
      Logger.info(`üìö ${booksData.length} livres ont √©t√© ajout√©s`);
    } else {
      Logger.info(`üìö Des livres existent d√©j√† (${booksCount} livres en base)`);
    }
  } catch (error) {
    Logger.error('‚ùå Erreur lors de la cr√©ation des livres:', error as Error);
    throw error;
  }
}
